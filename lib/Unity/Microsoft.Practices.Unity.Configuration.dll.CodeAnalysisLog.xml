<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 9.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="1.36">
 <Targets>
  <Target Name="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\bin\Debug\Microsoft.Practices.Unity.Configuration.dll">
   <Modules>
    <Module Name="microsoft.practices.unity.configuration.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Microsoft.Practices.Unity.Configuration.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Practices.Unity.Configuration">
       <Types>
        <Type Name="InstanceValueElement+TypeConverterManager" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration" File="InstanceValueElement.cs" Line="119">Change 'InstanceValueElement.TypeConverterManager.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypeResolvingConfigurationElementCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration" File="TypeResolvingConfigurationElementCollection.cs" Line="44">Rename virtual/interface member 'TypeResolvingConfigurationElementCollection.Get(int)' so that it no longer conflicts with the reserved language keyword 'Get'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration" File="TypeResolvingConfigurationElementCollection.cs" Line="59">Rename virtual/interface member 'TypeResolvingConfigurationElementCollection.Get(object)' so that it no longer conflicts with the reserved language keyword 'Get'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnityContainerExtensionConfigurationElement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\ConfigurationElements\ContainerElement\ContainerConfigurationExtensionElement" File="UnityContainerExtensionConfigurationElement.cs" Line="41">The property name 'UnityContainerExtensionConfigurationElement.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnityContainerExtensionElement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\ConfigurationElements\ContainerElement\ContainerExtensionElement" File="UnityContainerExtensionElement.cs" Line="43">The property name 'UnityContainerExtensionElement.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnityLifetimeElement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\ConfigurationElements\ContainerElement\TypesElement\LifetimeElement" File="UnityLifetimeElement.cs" Line="84">The property name 'UnityLifetimeElement.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnityTypeAlias" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\ConfigurationElements\TypeAliasesElement" File="UnityTypeAlias.cs" Line="41">The property name 'UnityTypeAlias.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnityTypeElement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2008-09-24 18:15:00Z" FixCategory="NonBreaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\michael\Documents\Downloads\UnitySource\UnitySource\Src\Unity.Configuration\ConfigurationElements\ContainerElement\TypesElement" File="UnityTypeElement.cs" Line="55">The property name 'UnityTypeElement.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182269(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="UsageRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182248(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb385967(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182253(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
